{
    "collab_server" : "",
    "contents" : "##### Basic Operations #####\n\nx <- 5 # defining a variable \n\nx * 2 # performing operations on variables \n\nx <- x * 2 # redefining a variable \n\n\n##### Defining a Character Variable #####\n\ny <- 'Abanti' # this is a character \n\n\n##### Vectors #####\n\nz <- c(2, 3, 4) # defining a vector\n\nz <- c(z, y) # concatonate \n\n\n##### Matricies ##### \n\nA <- matrix(data = c(1:10), nrow = 2)\nB <- matrix(data = 91:100, nrow = 2)\n\nC <- A + B # operations with matricies \n\nD <- A * B # this operation should not have worked bc of incompatible dimensions \n\nD <- A %*% B # how to do matrix multiplication in R, put % around the operation \n\na11 <- A [1,1] # subseting a matrix, calling the number from the first row, first column in matrix A\nb23 <- B [2,3] # subsetting a matrrix, calling the number from the second row, third column in matrix B\n\nb2j <- B [2, ] # subsetting an entire row\nbi2 <- B [, 2] # subsetting an entire column\n\ncolnames(A) <- c('Chandler', 'Monica', 'Rachel', 'Ross', 'Phoebe') # adding names to columns in matricies\nrownames(A) <- c('hookups', 'breakups') # adding names to rows in matricies \n\nchandler <- A [, 'Chandler'] # subetting a matrix through column names already defined \n\nhookups <- A ['hookups', ] # subsetting a matrix through row names already defined\n\ntmp_row <- c(21:25)\n\nA <- rbind(A, tmp_row) # binding row to bottom of matrix A\nA <- rbind(tmp_row, A) # binding row to top of matrix A \n\nB <- rbind(B [1, ], tmp_row, B [2, ]) # binding row in between rows of matrix A\n\ntmp_col <- c(40:42)\n\nB <- cbind(B, tmp_col) # binding column to end of matrix B \n\nB [c(1, 3), ] # subsetting a matrix via vector, called rows 1 and 3 from matrix B\n\nA [, c('Chandler', 'Monica')] # subsetting a matrix via vector names, called columns Chandler and Monica from matrix A\n\nA <- A [2:4, ] # a way to get rid of a row/extracts whateever row you specify, calls only the 2nd to 4th rows, doesn't present the first row \nA <- A [-1, ] # a way to get rid of a row, gets rid of the row number after the - sign \nA <- A [, -5] # a way to get rid of a column, gets rid of the column number af the - sign\n\n\n##### Dataframes #####\n\n# dataframes can have multiple classes of data, however columns must have the same class \n# cannot perform matrix operations on dataframes \n\ncol1 <- c(0:4)\ncol2 <- c(5:9)\ncol3 <- c('a', 'b', 'c', 'd', 'e')\n\ndA <- data.frame(col1, col2, col3) # created a dataframe \n\ncol4 <- dA [, 'col1'] + dA [, 'col2'] # performing operations on a subset of dataframe columns\n\ndA <- cbind(dA, col4) # adding a column to the end of a dataframe, same way as we did for matricies\n\ndA$col1 # method of subsetting a column in a dataframe and lists, add the $ before column name\n\n\n##### Lists ##### \n\n# container that you can put anything in, dataframes, vectors, matricies, single values, factors and they remain in their proper formats\n# powerful and helps keep a clean workplace, good for organization where you don't want so many variables, just clump them in a list and call them whenever needed \n\nlist.1 <- list(A, dA, col3, x) \n\nnames(list.1) <- c('smoothie', 'milkshake', 'hosico', 'colby') # naming different list entries\n\nlist.1$smoothie # method of calling a list entry \nlist.1[['smoothie']] # method of calling a list entry, double brackets only for lists \nlist.1[[1]] # method of calling a list entry via number, double brackets only for lists \n\nlist.1[[2]]$col1 # method of subsetting column 1 held inside the smoothie (2) entry, works the same for rows\nlist.1[[2]] [1, ] # method subsetting row 1 held inside the smoothie (2) entry, works the same for columns \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "created" : 1495071119771.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "102810771",
    "id" : "CFF1D5F2",
    "lastKnownWriteTime" : 1495071141,
    "last_content_update" : 1495071141858,
    "path" : "~/Documents/R Lessons/Tutorial_1.R",
    "project_path" : "Tutorial_1.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}